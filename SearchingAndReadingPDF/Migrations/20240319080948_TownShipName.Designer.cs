// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchingAndReadingPDF.Data;

#nullable disable

namespace SearchingAndReadingPDF.Migrations
{
    [DbContext(typeof(FileDataBaseContext))]
    [Migration("20240319080948_TownShipName")]
    partial class TownShipName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SearchingAndReadingPDF.Models.DocumentsFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DirectoryPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("documentsTable");
                });

            modelBuilder.Entity("SearchingAndReadingPDF.Models.Township", b =>
                {
                    b.Property<int>("TOWNSHIPID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TOWNSHIPID"));

                    b.Property<string>("TOWN_NAME_DESC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TownshipNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TOWNSHIPID");

                    b.ToTable("TownShips");
                });
#pragma warning restore 612, 618
        }
    }
}
